{
  "DataRevision": -990951682,
  "Event": "icse-2020",
  "Name": "ICSE 2020",
  "Description": " The 42nd International Conference on Software Engineering June 27, 2020 – July 19, 2020",
  "Sponsors": "ACM",
  "URL": "https://2020.icse-conferences.org",
  "Items": [
    {
      "Title": "Towards Formally Verified Key Management for Industrial Control Systems",
      "Type": "Paper",
      "Key": "Formalise-2020-papers/3",
      "URL": "https://2020.icse-conferences.org/details/Formalise-2020-papers/3/Towards-Formally-Verified-Key-Management-for-Industrial-Control-Systems",
      "PersonsString": "Tomas Kulik, Jalil Boudjadar and Diego F. Aranha",
      "Authors": [
        "author1smith"
      ],
      "Affiliations": [
        "Aarhus University"
      ],
      "AffiliationsString": "Aarhus University",
      "Abstract": "Adoption of new digital technologies is impacting all aspects of the society."
    },
    {
      "Title": "Lattice-Based Information Flow Control-by-Construction for Security-by-Design",
      "Type": "Paper",
      "Key": "Formalise-2020-papers/13",
      "URL": "https://2020.icse-conferences.org/details/Formalise-2020-papers/13/Lattice-Based-Information-Flow-Control-by-Construction-for-Security-by-Design",
      "PersonsString": "Tobias Runge, Alexander Knüppel, Thomas Thüm and Ina Schaefer",
      "Authors": [
        "johndoe",
        "marysmith"
      ],
      "Affiliations": [
        "TU Braunschweig",
        "TU Braunschweig"
      ],
      "AffiliationsString": "TU Braunschweig",
      "Abstract": "Many software applications contain confidential information, which has to be prevented from leaking through unauthorized access. To enforce confidentiality, there are language-based security mechanisms that rely on information flow control. Typically, these mechanisms work post-hoc by checking whether confidential data is accessed unauthorizedly after the complete program is written. The disadvantage is that incomplete programs cannot be interpreted properly and information flow properties cannot be built in constructively. In this work, we present a methodology to construct programs incrementally using refinement rules to follow a lattice-based information flow policy. In every refinement step, confidentiality and functional correctness of the program is guaranteed, such that insecure programs are prohibited by construction. Our contribution is fourfold. We formalize refinement rules for information flow control-by-construction, prove soundness of the refinement rules, show that our approach has the same expressiveness as standard language-based mechanisms for information flow, and implement the approach in a graphical editor called CorC. Our methodology is also usable for integrity properties, which are dual to confidentiality."
    }
  ],
  "Sessions": [
    {
      "Title": "MSR 2020 - Keynote: MSR 2020 Keynote",
      "ChairsString": "Mary Smith",
      "Chairs": [
        "marysmith"
      ],
      "Items": [
        "Formalise-2020-papers/3",
        "Formalise-2020-papers/13"
      ],
      "Abstract": "",
      "Type": "Keynote Speaker",
      "Key": "41d92e4b-5bac-4322-afff-30010f5fc5ef",
      "Day": "2020-06-29",
      "Time": "13:15 - 14:15",
      "Location": "Virtual | MSR:Zoom"
    }
  ],
  "People": [
    {
      "Name": "John Doe",
      "Affiliation": "TU Braunschweig",
      "Key": "johndoe"
    },
    {
      "Name": "Mary Smith",
      "Affiliation": "TU Braunschweig",
      "Key": "marysmith",
      "URL": "https://marysmith.github.io",
      "URLphoto": ""
    },
    {
      "Name": "Author1 Smith",
      "Affiliation": "Aarhus University",
      "Key": "author1smith",
      "Bio": "",
      "URL": "",
      "URLphoto": "https://www.google.com/"
    }
  ],
  "VenueInfo": {
    "Name": "Virtual"
  }
}